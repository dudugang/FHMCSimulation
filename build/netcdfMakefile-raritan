# define the C compiler to use
CXX = icpc

# define any compile-time flags
# -DNETCDF_CAPABLE to enable printing in netCDF formats, esle defaults to ASCII
# -DFLUID_PHASE_SIMULATIONS to enable the possibility of tail corrections
CXXFLAGS = -O3 -DFLUID_PHASE_SIMULATIONS 
#-std=c++11 
#-DNETCDF_CAPABLE

# define any directories containing header files other than /usr/include
#INCLUDES = -I/home/nam4_local/netCDF_c++4/4.2.1/install/include -I/home/nam4_local/netCDF/4.3.3.1/install/include 

# define library paths in addition to /usr/lib
#   if I wanted to include libraries not in /usr/lib I'd specify
#   their path using -Lpath, something like:
#LFLAGS = -L/home/nam4_local/netCDF_c++4/4.2.1/install/lib/ -L/home/nam4_local/netCDF/4.3.3.1/install/lib/

# define any libraries to link into executable:
#   if I want to link in libraries (libx.so or libx.a) I use the -llibname 
#   option, something like (this will link in libmylib.so and libm.so:
LIBS = -lstdc++ 
#-lnetcdf_c++4 -lnetcdf 

# define the C source files
SRC_DIR = ../src/
SRCS = ${SRC_DIR}bias.cpp ${SRC_DIR}cellList.cpp ${SRC_DIR}delete.cpp ${SRC_DIR}histogram.cpp ${SRC_DIR}insert.cpp ${SRC_DIR}main.cpp ${SRC_DIR}moves.cpp ${SRC_DIR}potentials.cpp ${SRC_DIR}swap.cpp ${SRC_DIR}system.cpp ${SRC_DIR}translate.cpp ${SRC_DIR}utilities.cpp

# define the CPP object files 
#
# This uses Suffix Replacement within a macro:
#   $(name:string1=string2)
#         For each word in 'name' replace 'string1' with 'string2'
# Below we are replacing the suffix .c of all words in the macro SRCS
# with the .o suffix
#
_OBJS = $(SRCS:.cpp=.o)
ODIR = ./
OBJS = $(patsubst %,$(ODIR)/%,$(_OBJS))

# define the executable file 
MAIN = ../bin/omcs

#
# The following part of the makefile is generic; it can be used to 
# build any executable just by changing the definitions above and by
# deleting dependencies appended to the file from 'make depend'
#

.PHONY: depend clean

all:    $(MAIN)
		@echo  Done

$(MAIN): $(OBJS)
		$(CXX) $(CXXFLAGS) $(INCLUDES) -o $(MAIN) $(OBJS) $(LFLAGS) $(LIBS)

# this is a suffix replacement rule for building .o's from .cppâ€™s
# it uses automatic variables $<: the name of the prerequisite of
# the rule(a .cpp file) and $@: the name of the target of the rule (a .o file) 
# (see the gnu make manual section about automatic variables)
.cpp.o:
		$(CXX) $(CXXFLAGS) $(INCLUDES) -c $<  -o $@

clean:
		$(RM) $(SRC_DIR)/*.o *~ $(MAIN)

depend: $(SRCS)
		makedepend $(INCLUDES) $^

# DO NOT DELETE THIS LINE -- make depend needs it
