.TH "atom" 3 "Thu Dec 22 2016" "Version v0.1.0" "Flat-Histogram Monte Carlo Simulation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
atom \- 
.PP
Atom class with rigid internal degrees of freedom besides its center of mass\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <atom\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBatom\fP ()"
.br
.ti -1c
.RI "\fBatom\fP (unsigned int ncenters, std::vector< std::vector< double > > rel_or)"
.br
.RI "\fIInstantiate an atom with centers oriented relative to the center\&. \fP"
.ti -1c
.RI "\fB~atom\fP ()"
.br
.ti -1c
.RI "void \fBrotateCenters\fP (const \fBquaternion\fP &q)"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "int \fBmState\fP"
.br
.RI "\fIState of fraction insertion of the atom in the expanded ensemble, 0 = fully inserted\&. \fP"
.ti -1c
.RI "std::vector< double > \fBpos\fP"
.br
.RI "\fI3D position \fP"
.ti -1c
.RI "std::vector< std::vector
.br
< double > > \fBvecToCenters\fP"
.br
.RI "\fIVectors pointing from pos to rigid centers\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Atom class with rigid internal degrees of freedom besides its center of mass\&. 
.PP
Definition at line 12 of file atom\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "atom::atom ()\fC [inline]\fP"

.PP
Definition at line 14 of file atom\&.h\&.
.PP
References mState, and pos\&.
.PP
.nf
14 { pos\&.resize(3, 0); mState = 0; } // assumes no centers
.fi
.SS "atom::atom (unsigned intncenters, std::vector< std::vector< double > >relOr)"

.PP
Instantiate an atom with centers oriented relative to the center\&. 
.PP
\fBParameters:\fP
.RS 4
\fIncenters\fP Number of centers /param [in] relOr Vectors pointing to rigid centers from atom's pos 
.RE
.PP

.PP
Definition at line 11 of file atom\&.cpp\&.
.PP
References vecToCenters\&.
.PP
.nf
11                                                                            {
12     try {
13         std::vector < double > dummy (3, 0);
14         vecToCenters\&.resize(ncenters, dummy);
15     } catch (std::bad_alloc &ba) {
16         throw customException ("Out of memory for atom centers");
17     }
18 
19     if (relOr\&.size() != ncenters) {
20         throw customException ("Must specify exactly one 3D orientation for each center");
21     } else {
22         for (unsigned int i = 0; i < ncenters; ++i) {
23             if (relOr[i]\&.size() != 3) {
24                 throw customException ("Error - 3D atom center orientations must be in 3D");
25             }
26             for (unsigned int j = 0; j < 3; ++j) {
27                 vecToCenters[i][j] = relOr[i][j];
28             }
29         }
30     }
31 }
.fi
.SS "atom::~atom ()\fC [inline]\fP"

.PP
Definition at line 16 of file atom\&.h\&.
.PP
.nf
16 {};
.fi
.SH "Member Function Documentation"
.PP 
.SS "void atom::rotateCenters (const \fBquaternion\fP &q)"

.SH "Field Documentation"
.PP 
.SS "int atom::mState"

.PP
State of fraction insertion of the atom in the expanded ensemble, 0 = fully inserted\&. 
.PP
Definition at line 21 of file atom\&.h\&.
.PP
Referenced by atom(), simSystem::deleteAtom(), hardWallZ::energy(), lennardJones::energy(), squareWellWallZ::energy(), fsLennardJones::energy(), cylinderZ::energy(), tabulated::energy(), rightTriangleXZ::energy(), squareWell::energy(), hardCore::energy(), simSystem::insertAtom(), hardWallZ::inside(), squareWellWallZ::inside(), cylinderZ::inside(), deleteParticle::make(), insertParticle::make(), and sanityChecks()\&.
.SS "std::vector< double > atom::pos"

.PP
3D position 
.PP
Definition at line 22 of file atom\&.h\&.
.PP
Referenced by atom(), hardWallZ::energy(), lennardJones::energy(), squareWellWallZ::energy(), fsLennardJones::energy(), cylinderZ::energy(), tabulated::energy(), rightTriangleXZ::energy(), squareWell::energy(), hardCore::energy(), simSystem::getNeighborAtoms(), cellList::insertParticle(), hardWallZ::inside(), squareWellWallZ::inside(), cylinderZ::inside(), aggVolBias3::make(), swapParticles::make(), insertParticle::make(), cellList::swapAndDeleteParticle(), and cellList::translateParticle()\&.
.SS "std::vector< std::vector < double > > atom::vecToCenters"

.PP
Vectors pointing from pos to rigid centers\&. 
.PP
Definition at line 23 of file atom\&.h\&.
.PP
Referenced by atom()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Flat-Histogram Monte Carlo Simulation from the source code\&.
