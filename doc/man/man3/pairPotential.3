.TH "pairPotential" 3 "Mon Aug 10 2015" "Version v0.0.1" "Multicomponent  Monte Carlo Simulation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pairPotential \- Abstract base class which defines all pair potentials\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <potentials\&.h>\fP
.PP
Inherited by \fBhardCore\fP, \fBlennardJones\fP, \fBsquareWell\fP, and \fBtabulated\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBpairPotential\fP ()"
.br
.ti -1c
.RI "virtual \fB~pairPotential\fP ()"
.br
.ti -1c
.RI "virtual double \fBenergy\fP (const double r)=0"
.br
.ti -1c
.RI "virtual double \fBtailCorrection\fP (const double rhoBath)=0"
.br
.ti -1c
.RI "virtual void \fBsetParameters\fP (const std::vector< double > params)=0"
.br
.ti -1c
.RI "virtual double \fBrcut\fP ()=0"
.br
.RI "\fIAll potentials should be able to return their r_{cut} values so neighbor lists, etc\&. \fP"
.ti -1c
.RI "double \fBenergy\fP (const std::vector< double > &p1, const std::vector< double > &p2, const std::vector< double > &box)"
.br
.RI "\fICalculates the minimum image distance and invokes the energy call\&. \fP"
.ti -1c
.RI "void \fBsavePotential\fP (std::string filename, double start, double dr)"
.br
.RI "\fIFunction for saving arbitrary potential into ASCII file\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "bool \fBuseTailCorrection\fP"
.br
.ti -1c
.RI "std::vector< double > \fBparams_\fP"
.br
.RI "\fIParameters (constants) that are needed to calculate U(r) \fP"
.ti -1c
.RI "bool \fBparamsAreSet_\fP"
.br
.RI "\fILogical check if the paramters for this potential have been specified by the user\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Abstract base class which defines all pair potentials\&. 
.PP
Definition at line 15 of file potentials\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "pairPotential::pairPotential ()\fC [inline]\fP"

.PP
Definition at line 17 of file potentials\&.h\&.
.PP
References paramsAreSet_\&.
.PP
.nf
17 { paramsAreSet_ = false; }
.fi
.SS "virtual pairPotential::~pairPotential ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Definition at line 18 of file potentials\&.h\&.
.PP
.nf
18 {;}
.fi
.SH "Member Function Documentation"
.PP 
.SS "virtual double pairPotential::energy (const double r)\fC [pure virtual]\fP"

.PP
Implemented in \fBhardCore\fP, \fBsquareWell\fP, \fBtabulated\fP, and \fBlennardJones\fP\&.
.PP
Referenced by savePotential()\&.
.SS "double pairPotential::energy (const std::vector< double > & p1, const std::vector< double > & p2, const std::vector< double > & box)\fC [inline]\fP"

.PP
Calculates the minimum image distance and invokes the energy call\&. 
.PP
Definition at line 26 of file potentials\&.h\&.
.PP
References energy(), and pbc_dist2()\&.
.PP
Referenced by energy()\&.
.SS "virtual double pairPotential::rcut ()\fC [pure virtual]\fP"

.PP
All potentials should be able to return their r_{cut} values so neighbor lists, etc\&. can use them 
.PP
Implemented in \fBhardCore\fP, \fBsquareWell\fP, \fBtabulated\fP, and \fBlennardJones\fP\&.
.PP
Referenced by simSystem::addPotential(), and savePotential()\&.
.SS "void pairPotential::savePotential (std::string filename, double start, double dr)"

.PP
Function for saving arbitrary potential into ASCII file\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP Name of ASCII file to save potential to 
.br
\fIstart\fP r value to start printing U(r) from 
.br
\fIdr\fP Increment to move in r between prints 
.RE
.PP

.PP
Definition at line 10 of file potentials\&.cpp\&.
.PP
References energy(), and rcut()\&.
.PP
.nf
11 {
12                 if (dr <= 0\&.0) {
13                                 throw customException("The value for dr must be positive");
14                 }
15                 
16                 double r = start;
17                 std::ofstream outData(filename\&.c_str());
18                                 
19                 while (r < rcut()) {
20                                 outData<<r<<"\t"<<energy(r)<<std::endl;                         
21                                 r += dr;
22                 }
23                 
24                 outData\&.close();
25 }
.fi
.SS "virtual void pairPotential::setParameters (const std::vector< double > params)\fC [pure virtual]\fP"

.PP
Implemented in \fBhardCore\fP, \fBsquareWell\fP, \fBtabulated\fP, and \fBlennardJones\fP\&.
.SS "virtual double pairPotential::tailCorrection (const double rhoBath)\fC [pure virtual]\fP"

.PP
Implemented in \fBhardCore\fP, \fBsquareWell\fP, \fBtabulated\fP, and \fBlennardJones\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "std::vector< double > pairPotential::params_"

.PP
Parameters (constants) that are needed to calculate U(r) 
.PP
Definition at line 29 of file potentials\&.h\&.
.PP
Referenced by lennardJones::energy(), tabulated::energy(), squareWell::energy(), hardCore::energy(), tabulated::loadPotential(), lennardJones::rcut(), tabulated::rcut(), squareWell::rcut(), hardCore::rcut(), lennardJones::setParameters(), tabulated::setParameters(), squareWell::setParameters(), hardCore::setParameters(), and lennardJones::tailCorrection()\&.
.SS "bool pairPotential::paramsAreSet_"

.PP
Logical check if the paramters for this potential have been specified by the user\&. 
.PP
Definition at line 30 of file potentials\&.h\&.
.PP
Referenced by lennardJones::energy(), tabulated::energy(), squareWell::energy(), hardCore::energy(), tabulated::loadPotential(), pairPotential(), lennardJones::rcut(), tabulated::rcut(), squareWell::rcut(), hardCore::rcut(), lennardJones::setParameters(), tabulated::setParameters(), squareWell::setParameters(), and hardCore::setParameters()\&.
.SS "bool pairPotential::useTailCorrection"

.PP
Definition at line 20 of file potentials\&.h\&.
.PP
Referenced by lennardJones::setParameters(), tabulated::setParameters(), squareWell::setParameters(), and hardCore::setParameters()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Multicomponent Monte Carlo Simulation from the source code\&.
