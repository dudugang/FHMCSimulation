.TH "squareWell" 3 "Mon Aug 10 2015" "Version v0.0.1" "Multicomponent  Monte Carlo Simulation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
squareWell \- Square-well potential Parameters should be specified in the following order: { sigma, wellwidth, welldepth }\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <potentials\&.h>\fP
.PP
Inherits \fBpairPotential\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB~squareWell\fP ()"
.br
.ti -1c
.RI "void \fBsetParameters\fP (const std::vector< double > params)"
.br
.RI "\fISet the parameters in the square-well equation\&. \fP"
.ti -1c
.RI "double \fBenergy\fP (const double r)"
.br
.RI "\fIReturn the energy of two particles separate by a distance r\&. \fP"
.ti -1c
.RI "double \fBtailCorrection\fP (const double rhoBath)"
.br
.RI "\fITail correction for a square well potential always returns 0\&. \fP"
.ti -1c
.RI "double \fBrcut\fP ()"
.br
.RI "\fIReturn the value of r_{cut} for this potential\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Square-well potential Parameters should be specified in the following order: { sigma, wellwidth, welldepth }\&. 
.PP
Definition at line 68 of file potentials\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "squareWell::~squareWell ()\fC [inline]\fP"

.PP
Definition at line 70 of file potentials\&.h\&.
.PP
.nf
70 {;}
.fi
.SH "Member Function Documentation"
.PP 
.SS "double squareWell::energy (const double r)\fC [virtual]\fP"

.PP
Return the energy of two particles separate by a distance r\&. 
.PP
\fBParameters:\fP
.RS 4
\fIr\fP Scalar separation, needs to be the minimum image
.RE
.PP
\fBReturns:\fP
.RS 4
U(r) 
.RE
.PP

.PP
Implements \fBpairPotential\fP\&.
.PP
Definition at line 257 of file potentials\&.cpp\&.
.PP
References pairPotential::params_, and pairPotential::paramsAreSet_\&.
.PP
.nf
257                                          {
258                 if (!paramsAreSet_) {
259                                 throw customException ("For squareWell parameters not set");
260                 }
261                 if (r < params_[0]) {
262                                 return 1\&.0E12;
263                 } else if (r < params_[1]) {
264                                 return params_[2];
265                 }
266                 else {
267                                 return 0\&.0;
268                 }
269 }
.fi
.SS "double squareWell::rcut ()\fC [virtual]\fP"

.PP
Return the value of r_{cut} for this potential\&. 
.PP
\fBReturns:\fP
.RS 4
r_cut 
.RE
.PP

.PP
Implements \fBpairPotential\fP\&.
.PP
Definition at line 287 of file potentials\&.cpp\&.
.PP
References pairPotential::params_, and pairPotential::paramsAreSet_\&.
.PP
.nf
287                          {
288                 if (!paramsAreSet_) {
289                                 throw customException ("For squareWell parameters not set");
290                 } else {
291                                 return (params_[1]);
292                 }
293 }
.fi
.SS "void squareWell::setParameters (const std::vector< double > params)\fC [virtual]\fP"

.PP
Set the parameters in the square-well equation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparams\fP Vector of inputs: {sigma, wellwidth, welldepth (magnitude)} 
.RE
.PP

.PP
Implements \fBpairPotential\fP\&.
.PP
Definition at line 229 of file potentials\&.cpp\&.
.PP
References pairPotential::params_, pairPotential::paramsAreSet_, and pairPotential::useTailCorrection\&.
.PP
Referenced by main()\&.
.PP
.nf
229                                                                  {
230                 if (params\&.size() != 3) {
231                                 throw customException ("For squareWell must specify 3 parameters: sigma, wellwidth, welldepth");
232                 } else {
233                                 if (params[0] < 0) {
234                                                 throw customException ("For squareWell, sigma > 0");
235                                 }
236                                 if (params[1] < 0) {
237                                                 throw customException ("For squareWell, wellwidth > 0");
238                                 }
239                                 
240                                 // save parameters as sigma, (sigma+wellWidth), -wellDepth to speed up energy calculation
241                                 params_ = params;
242                                 params_[1] = params[0] + params[1];
243                                 params_[2] = -params[2];
244                                 paramsAreSet_ = true;
245                                 
246                                 useTailCorrection = false;
247                 }
248 }
.fi
.SS "double squareWell::tailCorrection (const double rhoBath)\fC [virtual]\fP"

.PP
Tail correction for a square well potential always returns 0\&. 
.PP
\fBParameters:\fP
.RS 4
\fINumber\fP density of the surrounding fluid
.RE
.PP
\fBReturns:\fP
.RS 4
U_tail 
.RE
.PP

.PP
Implements \fBpairPotential\fP\&.
.PP
Definition at line 278 of file potentials\&.cpp\&.
.PP
.nf
278                                                       {
279                 return 0\&.0;
280 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Multicomponent Monte Carlo Simulation from the source code\&.
