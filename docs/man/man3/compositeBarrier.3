.TH "compositeBarrier" 3 "Fri Dec 30 2016" "Version v0.1.0" "Flat-Histogram Monte Carlo Simulation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
compositeBarrier \- 
.PP
Class which tracks all barriers (superimposed) which interact with a given species\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <barrier\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBcompositeBarrier\fP ()"
.br
.ti -1c
.RI "\fB~compositeBarrier\fP ()"
.br
.RI "\fIFree any system barriers present\&. \fP"
.ti -1c
.RI "void \fBclearAll\fP ()"
.br
.RI "\fIClear any barriers that are currently in the class\&. \fP"
.ti -1c
.RI "void \fBaddHardWallZ\fP (const double lb, const double ub, const double sigma, const int M=1)"
.br
.RI "\fIAdd a hard wall to interact with\&. \fP"
.ti -1c
.RI "void \fBaddSquareWellWallZ\fP (const double lb, const double ub, const double sigma, const double range, const double eps, const int M=1)"
.br
.RI "\fIAdd a square well wall to interact with\&. \fP"
.ti -1c
.RI "void \fBaddCylinderZ\fP (const double x, const double y, const double radius, const double width, const double sigma, const double eps, const int M=1)"
.br
.RI "\fIAdd a cylinder along z = 0 axis wall to interact with\&. \fP"
.ti -1c
.RI "void \fBaddRightTriangleXZ\fP (const double width, const double theta, const double lamW, const double eps, const double sigma, const double sep, const double offset, const std::vector< double > &box, const double zbase, bool top=false, const int M=1)"
.br
.RI "\fIAdd a rightTriangleZ feature to interact with\&. \fP"
.ti -1c
.RI "bool \fBinside\fP (const \fBatom\fP *a1, const std::vector< double > &box)"
.br
.RI "\fITest if inside ALL the barriers\&. \fP"
.ti -1c
.RI "double \fBenergy\fP (const \fBatom\fP *a1, const std::vector< double > &box)"
.br
.RI "\fIFind the total energy of interaction from ALL the barriers\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Class which tracks all barriers (superimposed) which interact with a given species\&. 
.PP
Definition at line 112 of file barrier\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "compositeBarrier::compositeBarrier ()\fC [inline]\fP"

.PP
Definition at line 114 of file barrier\&.h\&.
.PP
References clearAll()\&.
.PP
.nf
114 { clearAll(); }
.fi
.SS "compositeBarrier::~compositeBarrier ()"

.PP
Free any system barriers present\&. 
.PP
Definition at line 741 of file barrier\&.cpp\&.
.PP
.nf
741                                      {
742     sysBarriers_\&.clear();
743 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void compositeBarrier::addCylinderZ (const doublex, const doubley, const doubleradius, const doublewidth, const doublesigma, const doubleeps, const intM = \fC1\fP)"

.PP
Add a cylinder along z = 0 axis wall to interact with\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP x-coordinate of cylinder's center 
.br
\fIy\fP y-coordinate of cylinder's center 
.br
\fIradius\fP Radius of cylinder 
.br
\fIwidth\fP Width of square-well-like interaction (distance from wall) 
.br
\fIsigma\fP Hard-sphere diameter the species this wall interacts with can approach within 
.br
\fIeps\fP Magnitude of the wall interaction (U = -eps) 
.br
\fIM\fP Total number of expanded ensemble states possible for this atom type (defaults to 1) 
.RE
.PP

.PP
Definition at line 703 of file barrier\&.cpp\&.
.PP
.nf
703                                                                                                                                                                {
704     try {
705         auto barr = std::make_shared < cylinderZ > (x, y, radius, width, sigma, eps, M);
706         sysBarriers_\&.push_back(barr);
707     } catch (std::exception &ex) {
708         const std::string msg = ex\&.what();
709         throw customException ("Cannot add cylinderZ to composite barrier : "+msg);
710     }
711 }
.fi
.SS "void compositeBarrier::addHardWallZ (const doublelb, const doubleub, const doublesigma, const intM = \fC1\fP)"

.PP
Add a hard wall to interact with\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlb\fP z-Position of the lower wall 
.br
\fIub\fP z-Position of the upper wall 
.br
\fIsigma\fP Hard-sphere diameter the species this wall interacts with can approach within 
.br
\fIM\fP Total number of expanded ensemble states possible for this atom type (defaults to 1) 
.RE
.PP

.PP
Definition at line 662 of file barrier\&.cpp\&.
.PP
.nf
662                                                                                                       {
663     try {
664         auto barr = std::make_shared < hardWallZ > (lb, ub, sigma, M);
665         sysBarriers_\&.push_back(barr);
666     } catch (std::exception &ex) {
667         const std::string msg = ex\&.what();
668         throw customException ("Cannot add hardWallZ to composite barrier : "+msg);
669     }
670 }
.fi
.SS "void compositeBarrier::addRightTriangleXZ (const doublewidth, const doubletheta, const doublelamW, const doubleeps, const doublesigma, const doublesep, const doubleoffset, const std::vector< double > &box, const doublezbase, booltop = \fCfalse\fP, const intM = \fC1\fP)"

.PP
Add a rightTriangleZ feature to interact with\&. 
.PP
\fBParameters:\fP
.RS 4
\fIwidth\fP Width of triangle's feature 
.br
\fItheta\fP Elevation angle of the feature in radians (0, PI) 
.br
\fIlamW\fP Attractive range ratio relative to hard sphere in contact with the feature (akin to square well), must be >= 1 
.br
\fIeps\fP Attraction strength to feature 
.br
\fIsigma\fP Hard sphere diameter of interaction with the feature 
.br
\fIsep\fP Distance between features 
.br
\fIoffset\fP Offset from x = 0 position of the first feature 
.br
\fIbox\fP System box size to check the feature (as specified) is periodic in the box 
.br
\fIzbase\fP Z-coordinate of XY plane that defines the base of the feature\&. To avoid periodicity effects be sure it is > 0 and less than Lz, but this depends on other interactions so it cannot be checked automatically here\&. 
.br
\fItop\fP If true, feature is on the 'top', else is on the bottom (default) 
.br
\fINumber\fP of expanded ensemble states to recognize (default = 1) 
.RE
.PP

.PP
Definition at line 728 of file barrier\&.cpp\&.
.PP
.nf
728                                                                                                                                                                                                                                                              {
729     try {
730         auto barr = std::make_shared < rightTriangleXZ > (width, theta, lamW, eps, sigma, sep, offset, box, zbase, top, M);
731         sysBarriers_\&.push_back(barr);
732     } catch (std::exception &ex) {
733         const std::string msg = ex\&.what();
734         throw customException ("Cannot add rightTriangleXZ to composite barrier : "+msg);
735     }
736 }
.fi
.SS "void compositeBarrier::addSquareWellWallZ (const doublelb, const doubleub, const doublesigma, const doublerange, const doubleeps, const intM = \fC1\fP)"

.PP
Add a square well wall to interact with\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlb\fP z-Position of the lower wall 
.br
\fIub\fP z-Position of the upper wall 
.br
\fIsigma\fP Hard-sphere diameter the species this wall interacts with can approach within 
.br
\fIrange\fP Distance normal to the wall's surface where there is an interaction 
.br
\fIeps\fP Magnitude of the wall interaction (U = -eps) 
.br
\fIM\fP Total number of expanded ensemble states possible for this atom type (defaults to 1) 
.RE
.PP

.PP
Definition at line 682 of file barrier\&.cpp\&.
.PP
.nf
682                                                                                                                                                   {
683     try {
684         auto barr = std::make_shared < squareWellWallZ > (lb, ub, sigma, range, eps, M);
685         sysBarriers_\&.push_back(barr);
686     } catch (std::exception &ex) {
687         const std::string msg = ex\&.what();
688         throw customException ("Cannot add squareWellWallZ to composite barrier : "+msg);
689     }
690 }
.fi
.SS "void compositeBarrier::clearAll ()\fC [inline]\fP"

.PP
Clear any barriers that are currently in the class\&. 
.PP
Definition at line 117 of file barrier\&.h\&.
.PP
Referenced by compositeBarrier()\&.
.SS "double compositeBarrier::energy (const \fBatom\fP *a1, const std::vector< double > &box)"

.PP
Find the total energy of interaction from ALL the barriers\&. 
.PP
\fBParameters:\fP
.RS 4
\fIa1\fP Pointer to atom with position to test - this does NOT need to be in the simulation box a priori 
.br
\fIbox\fP Simulation box 
.RE
.PP

.PP
Definition at line 766 of file barrier\&.cpp\&.
.PP
References NUM_INFINITY\&.
.PP
.nf
766                                                                                 {
767     double U = 0\&.0;
768     for (std::vector < std::shared_ptr < barrier > >::iterator it = sysBarriers_\&.begin(); it != sysBarriers_\&.end(); ++it) {
769         double dU = (*it)->energy (a1, box);
770         if (dU < NUM_INFINITY) {
771             U += dU;
772         } else {
773             return NUM_INFINITY;
774         }
775     }
776     return U;
777 }
.fi
.SS "bool compositeBarrier::inside (const \fBatom\fP *a1, const std::vector< double > &box)"

.PP
Test if inside ALL the barriers\&. Returns false if outside any single one, but defaults to true (infinitely far away walls/barriers)\&.
.PP
\fBParameters:\fP
.RS 4
\fIa1\fP Pointer to atom with position to test - this does NOT need to be in the simulation box a priori 
.br
\fIbox\fP Simulation box 
.RE
.PP

.PP
Definition at line 751 of file barrier\&.cpp\&.
.PP
.nf
751                                                                               {
752     for (std::vector < std::shared_ptr < barrier > >::iterator it = sysBarriers_\&.begin(); it != sysBarriers_\&.end(); ++it) {
753         if (!(*it)->inside (a1, box)) {
754             return false;
755         }
756     }
757     return true;
758 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Flat-Histogram Monte Carlo Simulation from the source code\&.
