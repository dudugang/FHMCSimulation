.TH "squareWellWallZ" 3 "Wed Jan 4 2017" "Version v0.1.0" "Flat-Histogram Monte Carlo Simulation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
squareWellWallZ \- 
.PP
Parallel square-well walls in the z-direction\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <barrier\&.h>\fP
.PP
Inherits \fBbarrier\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB~squareWellWallZ\fP ()"
.br
.ti -1c
.RI "\fBsquareWellWallZ\fP (const double lb, const double ub, const double sigma, const double range, const double eps, const int M=1)"
.br
.RI "\fIInstantiate a square well wall with boundaries in the +/- z direction\&. \fP"
.ti -1c
.RI "bool \fBinside\fP (const \fBatom\fP *a1, const std::vector< double > &box)"
.br
.RI "\fIReturn whether or not a point falls between the walls (subject to a hard-sphere exclusion radius)\&. \fP"
.ti -1c
.RI "double \fBenergy\fP (const \fBatom\fP *a1, const std::vector< double > &box)"
.br
.RI "\fIInteraction energy with the wall\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Parallel square-well walls in the z-direction\&. 
.PP
Definition at line 46 of file barrier\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "squareWellWallZ::~squareWellWallZ ()\fC [inline]\fP"

.PP
Definition at line 48 of file barrier\&.h\&.
.PP
.nf
48 {};
.fi
.SS "squareWellWallZ::squareWellWallZ (const doublelb, const doubleub, const doublesigma, const doublerange, const doubleeps, const intM = \fC1\fP)"

.PP
Instantiate a square well wall with boundaries in the +/- z direction\&. Expanded ensembles primarily scale the magnitude of interaction\&. The repulsive boundary scales with sigma at the boundary, but the attractive cutoff remains fixed relative to the boundary\&.
.PP
\fBParameters:\fP
.RS 4
\fIlb\fP z-Position of the lower wall 
.br
\fIub\fP z-Position of the upper wall 
.br
\fIsigma\fP Hard-sphere diameter the species this wall interacts with can approach within 
.br
\fIrange\fP Distance normal to the wall's surface where there is an interaction 
.br
\fIeps\fP Magnitude of the wall interaction (U = -eps) 
.br
\fIM\fP Total number of expanded ensemble states possible for this atom type (defaults to 1) 
.RE
.PP

.PP
Definition at line 562 of file barrier\&.cpp\&.
.PP
References barrier::M_\&.
.PP
.nf
562                                                                                                                                          {
563     if (lb >= ub) {
564         throw customException ("squareWellWallZ must have lower bound < upper bound");
565     }
566     if (sigma < 0) {
567         throw customException ("squareWellWallZ must have sigma >= 0");
568     }
569     if (range < 0) {
570         throw customException ("squareWellWallZ must have range >= 0");
571     }
572     if (eps < 0) {
573         throw customException ("squareWellWallZ must have epsilon >= 0");
574     }
575     if (sigma/2\&.0 >= range) {
576         throw customException ("squareWellWallZ must have sigma/2 < range to have a finite range of interaction");
577     }
578     if (M < 1) {
579         throw customException ("squareWellWallZ must have M >= 1");
580     }
581 
582     eps_ = eps;
583     sigma_ = sigma;
584     range_ = range;
585     ub_ = ub;
586     lb_ = lb;
587     M_ = M;
588 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "double squareWellWallZ::energy (const \fBatom\fP *a1, const std::vector< double > &box)\fC [virtual]\fP"

.PP
Interaction energy with the wall\&. Sigma and epsilon are scaled linearly with expanded ensemble state\&.
.PP
\fBParameters:\fP
.RS 4
\fIa1\fP Pointer to atom with position to test - this does NOT need to be in the simulation box a priori 
.br
\fIbox\fP Simulation box 
.RE
.PP

.PP
Implements \fBbarrier\fP\&.
.PP
Definition at line 621 of file barrier\&.cpp\&.
.PP
References barrier::M_, atom::mState, NUM_INFINITY, pbc(), and atom::pos\&.
.PP
.nf
621                                                                                {
622     std::vector < double > p = a1->pos;
623     pbc (p, box);
624     double U = 0\&.0;
625 
626     double sig = sigma_, eps = eps_;
627     if (a1->mState > 0) {
628         sig = (sigma_/M_)*a1->mState;
629         eps = (eps_/M_)*a1->mState;
630     }
631     if (a1->mState < 0 || a1->mState > M_-1) {
632         throw customException ("mState out of bounds for squareWellWallZ");
633     }
634 
635     // Return infinity if out of bounds
636     if (p[2] >= ub_ - sig/2\&.0 || p[2] <= lb_ + sig/2\&.0) {
637         return NUM_INFINITY;
638     }
639 
640     // Interaction with top wall
641     if (p[2] > ub_ - range_) {
642         U += -eps;
643     }
644 
645     // Interaction with lower wall
646     if (p[2] < lb_ + range_) {
647         U += -eps;
648     }
649 
650     return U;
651 }
.fi
.SS "bool squareWellWallZ::inside (const \fBatom\fP *a1, const std::vector< double > &box)\fC [virtual]\fP"

.PP
Return whether or not a point falls between the walls (subject to a hard-sphere exclusion radius)\&. Sigma is scaled linearly with expanded ensemble state\&.
.PP
\fBParameters:\fP
.RS 4
\fIa1\fP Pointer to atom with position to test - this does NOT need to be in the simulation box a priori 
.br
\fIbox\fP Simulation box 
.RE
.PP

.PP
Implements \fBbarrier\fP\&.
.PP
Definition at line 596 of file barrier\&.cpp\&.
.PP
References barrier::M_, atom::mState, pbc(), and atom::pos\&.
.PP
.nf
596                                                                              {
597     std::vector < double > p = a1->pos;
598     pbc (p, box);
599 
600     double sig = sigma_;
601     if (a1->mState > 0) {
602         sig = (sigma_/M_)*a1->mState;
603     }
604     if (a1->mState < 0 || a1->mState > M_-1) {
605         throw customException ("mState out of bounds for squareWellWallZ");
606     }
607 
608     if (p[2] >= ub_ - sig/2\&.0 || p[2] <= lb_ + sig/2\&.0) {
609         return false;
610     } else {
611         return true;
612     }
613 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Flat-Histogram Monte Carlo Simulation from the source code\&.
