.TH "squareWellWallZ" 3 "Fri Dec 30 2016" "Version v0.1.0" "Flat-Histogram Monte Carlo Simulation" \" -*- nroff -*-
.ad l
.nh
.SH NAME
squareWellWallZ \- 
.PP
Parallel square-well walls in the z-direction\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <barrier\&.h>\fP
.PP
Inherits \fBbarrier\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB~squareWellWallZ\fP ()"
.br
.ti -1c
.RI "\fBsquareWellWallZ\fP (const double lb, const double ub, const double sigma, const double range, const double eps, const int M=1)"
.br
.RI "\fIInstantiate a square well wall with boundaries in the +/- z direction\&. \fP"
.ti -1c
.RI "bool \fBinside\fP (const \fBatom\fP *a1, const std::vector< double > &box)"
.br
.RI "\fIReturn whether or not a point falls between the walls (subject to a hard-sphere exclusion radius)\&. \fP"
.ti -1c
.RI "double \fBenergy\fP (const \fBatom\fP *a1, const std::vector< double > &box)"
.br
.RI "\fIInteraction energy with the wall\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Parallel square-well walls in the z-direction\&. 
.PP
Definition at line 45 of file barrier\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "squareWellWallZ::~squareWellWallZ ()\fC [inline]\fP"

.PP
Definition at line 47 of file barrier\&.h\&.
.PP
.nf
47 {};
.fi
.SS "squareWellWallZ::squareWellWallZ (const doublelb, const doubleub, const doublesigma, const doublerange, const doubleeps, const intM = \fC1\fP)"

.PP
Instantiate a square well wall with boundaries in the +/- z direction\&. Expanded ensembles primarily scale the magnitude of interaction\&. The repulsive boundary scales with sigma at the boundary, but the attractive cutoff remains fixed relative to the boundary\&.
.PP
\fBParameters:\fP
.RS 4
\fIlb\fP z-Position of the lower wall 
.br
\fIub\fP z-Position of the upper wall 
.br
\fIsigma\fP Hard-sphere diameter the species this wall interacts with can approach within 
.br
\fIrange\fP Distance normal to the wall's surface where there is an interaction 
.br
\fIeps\fP Magnitude of the wall interaction (U = -eps) 
.br
\fIM\fP Total number of expanded ensemble states possible for this atom type (defaults to 1) 
.RE
.PP

.PP
Definition at line 563 of file barrier\&.cpp\&.
.PP
References barrier::M_\&.
.PP
.nf
563                                                                                                                                          {
564     if (lb >= ub) {
565         throw customException ("squareWellWallZ must have lower bound < upper bound");
566     }
567     if (sigma < 0) {
568         throw customException ("squareWellWallZ must have sigma >= 0");
569     }
570     if (range < 0) {
571         throw customException ("squareWellWallZ must have range >= 0");
572     }
573     if (eps < 0) {
574         throw customException ("squareWellWallZ must have epsilon >= 0");
575     }
576     if (sigma/2\&.0 >= range) {
577         throw customException ("squareWellWallZ must have sigma/2 < range to have a finite range of interaction");
578     }
579     if (M < 1) {
580         throw customException ("squareWellWallZ must have M >= 1");
581     }
582 
583     eps_ = eps;
584     sigma_ = sigma;
585     range_ = range;
586     ub_ = ub;
587     lb_ = lb;
588     M_ = M;
589 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "double squareWellWallZ::energy (const \fBatom\fP *a1, const std::vector< double > &box)\fC [virtual]\fP"

.PP
Interaction energy with the wall\&. Sigma and epsilon are scaled linearly with expanded ensemble state\&.
.PP
\fBParameters:\fP
.RS 4
\fIa1\fP Pointer to atom with position to test - this does NOT need to be in the simulation box a priori 
.br
\fIbox\fP Simulation box 
.RE
.PP

.PP
Implements \fBbarrier\fP\&.
.PP
Definition at line 622 of file barrier\&.cpp\&.
.PP
References barrier::M_, atom::mState, NUM_INFINITY, pbc(), and atom::pos\&.
.PP
.nf
622                                                                                {
623     std::vector < double > p = a1->pos;
624     pbc (p, box);
625     double U = 0\&.0;
626 
627     double sig = sigma_, eps = eps_;
628     if (a1->mState > 0) {
629         sig = (sigma_/M_)*a1->mState;
630         eps = (eps_/M_)*a1->mState;
631     }
632     if (a1->mState < 0 || a1->mState > M_-1) {
633         throw customException ("mState out of bounds for squareWellWallZ");
634     }
635 
636     // return infinity if out of bounds
637     if (p[2] >= ub_ - sig/2\&.0 || p[2] <= lb_ + sig/2\&.0) {
638         return NUM_INFINITY;
639     }
640 
641     // interaction with top wall
642     if (p[2] > ub_ - range_) {
643         U += -eps;
644     }
645 
646     // interaction with lower wall
647     if (p[2] < lb_ + range_) {
648         U += -eps;
649     }
650 
651     return U;
652 }
.fi
.SS "bool squareWellWallZ::inside (const \fBatom\fP *a1, const std::vector< double > &box)\fC [virtual]\fP"

.PP
Return whether or not a point falls between the walls (subject to a hard-sphere exclusion radius)\&. Sigma is scaled linearly with expanded ensemble state\&.
.PP
\fBParameters:\fP
.RS 4
\fIa1\fP Pointer to atom with position to test - this does NOT need to be in the simulation box a priori 
.br
\fIbox\fP Simulation box 
.RE
.PP

.PP
Implements \fBbarrier\fP\&.
.PP
Definition at line 597 of file barrier\&.cpp\&.
.PP
References barrier::M_, atom::mState, pbc(), and atom::pos\&.
.PP
.nf
597                                                                              {
598     std::vector < double > p = a1->pos;
599     pbc (p, box);
600 
601     double sig = sigma_;
602     if (a1->mState > 0) {
603         sig = (sigma_/M_)*a1->mState;
604     }
605     if (a1->mState < 0 || a1->mState > M_-1) {
606         throw customException ("mState out of bounds for squareWellWallZ");
607     }
608 
609     if (p[2] >= ub_ - sig/2\&.0 || p[2] <= lb_ + sig/2\&.0) {
610         return false;
611     } else {
612         return true;
613     }
614 }
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for Flat-Histogram Monte Carlo Simulation from the source code\&.
